#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};


/ {

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&lt 2 LBKT  &kp SQT    &kp COMMA     &kp DOT        &kp P             &kp Y       &kp UP_ARROW     &kp F       &kp G            &kp C               &kp R            &kp V           &lt 2 RBKT
&lt 1 SLASH &kp A      &kp O         &kp E          &kp U             &kp I       &kp DOWN_ARROW   &kp D       &kp H            &kp T               &kp N            &kp S           &lt 1 BSLH
&lt 3 GRAVE &kp SEMI  &kp Q         &kp J           &kp K             &kp X       &kp LEFT_ARROW  &kp B       &kp L            &kp M               &kp W            &kp Z           &lt 3 TILDE
&kp ESC     &kp N1     &kp N2        &kp N3         &kp N4            &kp N5      &kp RIGHT_ARROW     &kp N6      &kp N7           &kp N8              &kp N9           &kp N0          &kp BACKSPACE
&kp C_MUTE  &sk LCTRL  &sk LALT      &mt LGUI TAB   &mt LSHFT ESC     &lt 1 LPAR  &kp ENTER        &lt 1 RPAR  &mt RSFT SPACE  &mt RCTRL ENTER      &kp RIGHT_SHIFT  &kp C_RESET
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&trans      &kp EXCL    &kp AT            &kp HASH         &kp DOLLAR         &kp PERCENT          &mmv MOVE_UP         &kp EQUAL     &kp N7     &kp N8      &kp N9     &kp MINUS        &kp LPAR
&trans      &kp CARET   &kp LEFT_ARROW    &kp UP_ARROW     &kp RIGHT_ARROW    &kp AMPS             &mmv MOVE_DOWN       &kp N0        &kp N4     &kp N5      &kp N6     &kp BACKSPACE    &kp RPAR
&trans      &kp STAR    &kp LPAR          &kp DOWN_ARROW   &kp RPAR           &rgb_ug RGB_SPI      &mmv MOVE_LEFT       &kp PLUS      &kp N1     &kp N2      &kp N3     &kp SLASH        &trans
&kp F11     &kp F1      &kp F2            &kp F3           &kp F4             &kp F5               &mmv MOVE_RIGHT      &kp F6        &kp F7     &kp F8      &kp F9     &kp F10          &kp F12
&kp C_MUTE  &trans      &trans            &trans            &trans            &trans               &mkp LCLK            &trans        &trans     &trans      &trans     &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&kp TILDE  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &kp F6  &kp F7  &kp F8      &kp F9     &kp F10      &trans
&trans     &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &mmv MOVE_DOWN   &trans  &trans  &kp F11     &kp F12    &kp UNDER    &kp PLUS
&trans     &out OUT_USB  &out OUT_BLE    &trans        &trans        &trans          &mmv MOVE_LEFT   &trans  &trans  &trans      &trans     &kp LBRC     &kp RBRC
&trans     &sys_reset    &trans          &bootloader   &trans        &trans          &mmv MOVE_RIGHT  &trans  &trans  &sys_reset  &soft_off  &bootloader  &trans
&trans     &trans        &trans          &trans        &trans        &trans          &mkp LCLK        &trans  &trans  &trans      &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
    combos {
        compatible = "zmk,combos";
        combo_slash {
            key-positions = <15 21 9>;
            layers=<0>;
            bindings=<&kp SLASH>;
        };
        combo_bkslash {
            key-positions = <15 23 9>;
            layers=<0>;
            bindings=<&kp BSLH>;
        };
        combo_lt_1_right {
            key-positions = <16 3>;
            layers=<0>;
            bindings=<&mo 1>;
        };
        combo_lt_1_left {
            key-positions = <22 9>;
            layers=<0>;
            bindings=<&mo 1>;
        };
        combo_lpar {
            key-positions = <2 15 21>;
            layers=<0>;
            bindings = <&kp LPAR>;
        };
        combo_rpar {
            key-positions = <2 15 34>;
            layers=<0>;
            bindings = <&kp RPAR>;
        };
        combo_lbkt {
            key-positions = <2 15 22>;
            layers=<0>;
            bindings = <&kp LBKT>;
        };
        combo_rbkt {
            key-positions = <2 15 35>;
            layers=<0>;
            bindings = <&kp RBKT>;
        };
        combo_lbrc {
            key-positions = <2 15 23>;
            layers=<0>;
            bindings = <&kp LBRC>;
        };
        combo_rbrc {
            key-positions = <2 15 36>;
            layers=<0>;
            bindings = <&kp RBRC>;
        };
        combo_minus {
            key-positions = <15 9 10>;
            layers = <0>;
            bindings = <&kp MINUS>;
        };
        combo_minus {
            key-positions = <15 35 36>;
            layers = <0>;
            bindings = <&kp UNDER>;
        };
    };
};
